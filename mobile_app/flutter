#!/bin/bash

# VS Code Flutter Launch Script with Infisical
# This replaces the flutter command temporarily for VS Code

set -e

# Ensure we're in the mobile_app directory
cd "$(dirname "$0")"

# Set PATH to include Homebrew
export PATH="/opt/homebrew/bin:/usr/local/bin:$PATH"

echo "üöÄ VS Code Flutter with Infisical - Starting..."

# Check if infisical is available
if ! command -v infisical &> /dev/null; then
    echo "‚ùå Infisical not found. Using defaults."
    exec /Users/adolphus.okrah/Desktop/my-stuffs/flutter/bin/flutter "$@"
fi

# Get secrets and format them
echo "üì° Fetching Infisical secrets..."
SECRETS=$(infisical secrets --env=dev --plain 2>/dev/null || echo "")

if [ -z "$SECRETS" ]; then
    echo "‚ö†Ô∏è  No secrets found. Using defaults."
    exec /Users/adolphus.okrah/Desktop/my-stuffs/flutter/bin/flutter "$@"
fi

# Convert secrets to --dart-define format
DART_DEFINES=""
while IFS='=' read -r key value; do
    if [ -n "$key" ] && [ -n "$value" ]; then
        DART_DEFINES="$DART_DEFINES --dart-define=$key=$value"
    fi
done <<< "$SECRETS"

echo "‚úÖ Secrets loaded. Launching Flutter..."
echo "Args: $DART_DEFINES"

# Launch flutter with secrets
if [[ "$1" == "run" ]]; then
    echo "üéØ Flutter run detected - injecting secrets"
    exec /Users/adolphus.okrah/Desktop/my-stuffs/flutter/bin/flutter run $DART_DEFINES "${@:2}"
else
    echo "üîÑ Non-run command - passing through"
    exec /Users/adolphus.okrah/Desktop/my-stuffs/flutter/bin/flutter "$@"
fi
