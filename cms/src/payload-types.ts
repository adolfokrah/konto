/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    jars: Jar;
    contributions: Contribution;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    jars: JarsSelect<false> | JarsSelect<true>;
    contributions: ContributionsSelect<false> | ContributionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  /**
   * Upload a profile photo
   */
  photo?: (string | null) | Media;
  fullName: string;
  /**
   * Country code for the phone number, e.g., +233 for Ghana
   */
  countryCode?: string | null;
  phoneNumber: string;
  country: string;
  isKYCVerified?: boolean | null;
  bank?: string | null;
  accountNumber?: string | null;
  accountHolder?: string | null;
  appSettings?: {
    language?: ('en' | 'fr') | null;
    darkMode?: boolean | null;
    biometricAuthEnabled?: boolean | null;
    notificationsSettings?: {
      pushNotificationsEnabled?: boolean | null;
      emailNotificationsEnabled?: boolean | null;
      smsNotificationsEnabled?: boolean | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jars".
 */
export interface Jar {
  id: string;
  /**
   * Name of the jar
   */
  name: string;
  /**
   * Description of the jar
   */
  description?: string | null;
  jarGroup?: string | null;
  /**
   * Upload an image for the jar
   */
  image?: (string | null) | Media;
  /**
   * Whether the jar is currently active
   */
  isActive?: boolean | null;
  /**
   * Whether the contribution amount is fixed
   */
  isFixedContribution?: boolean | null;
  /**
   * Accepted contribution amount for fixed contributions
   */
  acceptedContributionAmount?: number | null;
  /**
   * Target amount for the jar
   */
  goalAmount?: number | null;
  /**
   * Deadline for contributions to this jar
   */
  deadline?: string | null;
  /**
   * Currency code (ghc or ngn)
   */
  currency: string;
  /**
   * User who created the jar
   */
  creator: string | User;
  invitedCollectors?:
    | {
        /**
         * Users who can contribute to this jar (excluding the creator)
         */
        collector?: (string | null) | User;
        /**
         * Phone number of the invited collector (auto-populated from selected collector)
         */
        phoneNumber?: string | null;
        /**
         * Name of the invited collector (auto-populated from selected collector)
         */
        name?: string | null;
        status: 'accepted' | 'pending';
        id?: string | null;
      }[]
    | null;
  paymentLink?: string | null;
  /**
   * Allow anonymous contributions to this jar
   */
  acceptAnonymousContributions?: boolean | null;
  /**
   * Payment methods accepted for contributions to this jar
   */
  acceptedPaymentMethods: ('mobile-money' | 'bank-transfer' | 'cash')[];
  /**
   * Current status of the jar
   */
  status: 'open' | 'broken' | 'sealed';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contributions".
 */
export interface Contribution {
  id: string;
  /**
   * Select the jar to contribute to
   */
  jar: string | Jar;
  contributor?: string | null;
  /**
   * Phone number of the contributor
   */
  contributorPhoneNumber?: string | null;
  paymentMethod?: ('mobile-money' | 'bank-transfer' | 'cash') | null;
  mobileMoneyProvider?: string | null;
  /**
   * Account number for bank transfers
   */
  accountNumber?: string | null;
  amountContributed: number;
  charges?: number | null;
  paymentStatus?: ('pending' | 'completed' | 'failed' | 'transferred') | null;
  /**
   * Select the linked deposit for this contribution
   */
  linkedContribution?: (string | null) | Contribution;
  /**
   * Select the linked transfer for this contribution
   */
  linkedTransfer?: (string | null) | Contribution;
  /**
   * Check if this contribution has been transferred
   */
  isTransferred?: boolean | null;
  /**
   * Transaction reference for tracking payments
   */
  transactionReference?: string | null;
  /**
   * User who collected the contribution
   */
  collector: string | User;
  /**
   * Check if this contribution was made via a payment link
   */
  viaPaymentLink?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'jars';
        value: string | Jar;
      } | null)
    | ({
        relationTo: 'contributions';
        value: string | Contribution;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  photo?: T;
  fullName?: T;
  countryCode?: T;
  phoneNumber?: T;
  country?: T;
  isKYCVerified?: T;
  bank?: T;
  accountNumber?: T;
  accountHolder?: T;
  appSettings?:
    | T
    | {
        language?: T;
        darkMode?: T;
        biometricAuthEnabled?: T;
        notificationsSettings?:
          | T
          | {
              pushNotificationsEnabled?: T;
              emailNotificationsEnabled?: T;
              smsNotificationsEnabled?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jars_select".
 */
export interface JarsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  jarGroup?: T;
  image?: T;
  isActive?: T;
  isFixedContribution?: T;
  acceptedContributionAmount?: T;
  goalAmount?: T;
  deadline?: T;
  currency?: T;
  creator?: T;
  invitedCollectors?:
    | T
    | {
        collector?: T;
        phoneNumber?: T;
        name?: T;
        status?: T;
        id?: T;
      };
  paymentLink?: T;
  acceptAnonymousContributions?: T;
  acceptedPaymentMethods?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contributions_select".
 */
export interface ContributionsSelect<T extends boolean = true> {
  jar?: T;
  contributor?: T;
  contributorPhoneNumber?: T;
  paymentMethod?: T;
  mobileMoneyProvider?: T;
  accountNumber?: T;
  amountContributed?: T;
  charges?: T;
  paymentStatus?: T;
  linkedContribution?: T;
  linkedTransfer?: T;
  isTransferred?: T;
  transactionReference?: T;
  collector?: T;
  viaPaymentLink?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}