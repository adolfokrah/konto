/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    contributions: Contribution;
    jars: Jar;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    contributions: ContributionsSelect<false> | ContributionsSelect<true>;
    jars: JarsSelect<false> | JarsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: 'en' | 'fr';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    title?: string | null;
    subTitle?: string | null;
    dateLabel?: string | null;
    date?: string | null;
    buttonTitle?: string | null;
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            /**
             * Optional anchor/hash fragment (e.g., "faq", "features") - will be appended as #anchor to the URL
             */
            anchor?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline-solid') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
    avatarsSection?: {
      enabled?: boolean | null;
      title?: string | null;
      subtitle?: string | null;
      avatars?:
        | {
            image: string | Media;
            name: string;
            id?: string | null;
          }[]
        | null;
      appStoreLinks?: {
        title?: string | null;
        appleAppStoreUrl?: string | null;
        googlePlayStoreUrl?: string | null;
      };
    };
    appStoreLinks?: {
      title?: string | null;
      appleAppStoreUrl?: string | null;
      googlePlayStoreUrl?: string | null;
    };
  };
  layout: (
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | WhyChooseUsBlock
    | FeaturesBlock
    | UseCasesSummaryBlock
    | PricingBlock
    | MetricsBlock
    | MissionVisionValuesBlock
    | TestimonialsBlock
    | FAQBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  /**
   * Upload a profile photo
   */
  photo?: (string | null) | Media;
  fullName: string;
  /**
   * Country code for the phone number, e.g., +233 for Ghana
   */
  countryCode?: string | null;
  phoneNumber: string;
  country: string;
  isKYCVerified?: boolean | null;
  frontFile?: (string | null) | Media;
  backFile?: (string | null) | Media;
  photoFile?: (string | null) | Media;
  documentType?: string | null;
  /**
   * KYC session ID from the KYC provider
   */
  kycSessionId?: string | null;
  kycStatus?: ('pending' | 'verified' | 'none') | null;
  /**
   * User role - only admin users can access the CMS
   */
  role: 'user' | 'admin';
  bank?: string | null;
  accountNumber?: string | null;
  accountHolder?: string | null;
  paystackSubAccountCode?: string | null;
  appSettings?: {
    language?: ('en' | 'fr') | null;
    theme?: ('light' | 'dark' | 'system') | null;
    biometricAuthEnabled?: boolean | null;
    notificationsSettings?: {
      pushNotificationsEnabled?: boolean | null;
      emailNotificationsEnabled?: boolean | null;
      smsNotificationsEnabled?: boolean | null;
    };
  };
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  title: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image?: (string | null) | Media;
  appStoreButton?: {
    show?: boolean | null;
    url?: string | null;
  };
  googlePlayButton?: {
    show?: boolean | null;
    url?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "about-us", "services"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          /**
           * Optional anchor/hash fragment (e.g., "faq", "features") - will be appended as #anchor to the URL
           */
          anchor?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline-solid') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WhyChooseUsBlock".
 */
export interface WhyChooseUsBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  /**
   * Main heading for the why choose us section
   */
  title?: string | null;
  /**
   * Optional subtitle or description
   */
  subtitle?: string | null;
  /**
   * List of features/benefits to display
   */
  features?:
    | {
        /**
         * Feature title (e.g., "Trusted by millions")
         */
        title: string;
        /**
         * Brief description of the feature
         */
        description: string;
        /**
         * Icon or image for this feature
         */
        icon?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  /**
   * Background color for the section
   */
  backgroundColor?: ('white' | 'gray' | 'dark' | 'transparent') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'whyChooseUs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlock".
 */
export interface FeaturesBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  /**
   * Main heading for the features section
   */
  title?: string | null;
  /**
   * List of features to display
   */
  features?:
    | {
        /**
         * Feature title
         */
        title: string;
        /**
         * Feature subtitle or description
         */
        subtitle?: string | null;
        /**
         * Feature image
         */
        image?: (string | null) | Media;
        /**
         * Enable link/button for this feature
         */
        showLink?: boolean | null;
        /**
         * Button link for this feature
         */
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          /**
           * Optional anchor/hash fragment (e.g., "faq", "features") - will be appended as #anchor to the URL
           */
          anchor?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline-solid') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'features';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "UseCasesSummaryBlock".
 */
export interface UseCasesSummaryBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  /**
   * Main heading for the use cases section
   */
  title?: string | null;
  /**
   * Optional subtitle or description
   */
  subtitle?: string | null;
  /**
   * List of use cases to display
   */
  useCases?:
    | {
        /**
         * Use case image or mockup
         */
        image: string | Media;
        /**
         * Use case category (e.g., "FUNERALS & MEMORIALS")
         */
        useCase: string;
        /**
         * Main title for this use case
         */
        title: string;
        /**
         * Detailed description of the use case
         */
        description: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        /**
         * Position of the image relative to the text content
         */
        imagePosition?: ('left' | 'right') | null;
        /**
         * Enable link/button for this use case
         */
        showLink?: boolean | null;
        /**
         * Call-to-action link for this use case
         */
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          /**
           * Optional anchor/hash fragment (e.g., "faq", "features") - will be appended as #anchor to the URL
           */
          anchor?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline-solid') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'useCasesSummary';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingBlock".
 */
export interface PricingBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  /**
   * Main heading for the pricing section
   */
  title: string;
  /**
   * Description text explaining the pricing model
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  calculatorSection?: {
    /**
     * Label for the amount input section
     */
    requestLabel?: string | null;
    /**
     * Label for fee payer selection
     */
    feePayerLabel?: string | null;
    feePayerOptions?:
      | {
          label: string;
          value: string;
          id?: string | null;
        }[]
      | null;
    chargesBreakdownLabel?: string | null;
    /**
     * Label for the telco/paystack transaction fee
     */
    telcoFeeLabel?: string | null;
    /**
     * Label for the platform fee
     */
    platformFeeLabel?: string | null;
    /**
     * Label for the total amount contributor pays
     */
    contributorPaysLabel?: string | null;
    youReceiveLabel?: string | null;
  };
  feeStructure?: {
    /**
     * Telco transaction fee percentage
     */
    telcoTransactionFee?: number | null;
    /**
     * Maximum platform fee percentage
     */
    platformFeeMax?: number | null;
  };
  features?:
    | {
        /**
         * Feature or benefit description
         */
        feature: string;
        id?: string | null;
      }[]
    | null;
  ctaButton?: {
    /**
     * Button text that will focus on the calculator when clicked
     */
    text?: string | null;
  };
  poweredBy?: {
    text?: string | null;
    /**
     * Payment provider logo (e.g., Paystack)
     */
    logo?: (string | null) | Media;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'pricing';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MetricsBlock".
 */
export interface MetricsBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  /**
   * Main heading for the metrics section
   */
  title: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Subtitle or tagline below the main title
   */
  subtitle?: string | null;
  statistics?:
    | {
        /**
         * Main statistic number or text (e.g., "5M +", "200")
         */
        title: string;
        /**
         * Description or label for the statistic
         */
        subtitle: string;
        /**
         * Optional image/icon for this statistic
         */
        image?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'metrics';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MissionVisionValuesBlock".
 */
export interface MissionVisionValuesBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  /**
   * Main heading for the mission, vision & values section (e.g., "Hoga's Mission, Vision & Values")
   */
  title: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Subtitle or tagline below the main title
   */
  subtitle?: string | null;
  items?:
    | {
        /**
         * Title for this item (e.g., "Our Vision", "Our Mission")
         */
        title: string;
        /**
         * Description text for this item
         */
        description: string;
        /**
         * Icon to display for this item
         */
        icon: 'lightbulb' | 'bullseye' | 'gem' | 'heart' | 'target' | 'star';
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'missionVisionValues';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  /**
   * Main heading for the testimonials section
   */
  heading?: string | null;
  /**
   * Subtitle or description below the main heading
   */
  subheading?: string | null;
  /**
   * List of testimonials to display
   */
  testimonials?:
    | {
        /**
         * The testimonial quote/text
         */
        quote: string;
        /**
         * Name of the person giving the testimonial
         */
        authorName: string;
        /**
         * Job title or description of the person (e.g., Event Organizer, Collector)
         */
        authorTitle?: string | null;
        /**
         * Profile photo of the testimonial author
         */
        authorImage?: (string | null) | Media;
        /**
         * Company or organization (optional)
         */
        company?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Show navigation arrows for the testimonials section
   */
  showNavigation?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonials';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock".
 */
export interface FAQBlock {
  /**
   * Optional anchor ID for linking to this block (e.g., "features", "testimonials"). Will be used as the HTML id attribute.
   */
  anchor?: string | null;
  heading?: string | null;
  subheading?: string | null;
  faqs?:
    | {
        question: string;
        answer: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faq';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contributions".
 */
export interface Contribution {
  id: string;
  /**
   * Select the jar to contribute to
   */
  jar: string | Jar;
  contributor?: string | null;
  /**
   * Phone number of the contributor
   */
  contributorPhoneNumber?: string | null;
  paymentMethod?: ('mobile-money' | 'bank-transfer' | 'cash') | null;
  mobileMoneyProvider?: string | null;
  /**
   * Account number for bank transfers
   */
  accountNumber?: string | null;
  amountContributed: number;
  charges?: number | null;
  /**
   * Detailed breakdown of all charges applied to this contribution
   */
  chargesBreakdown?: {
    /**
     * Mobile money transfer fee (₵1)
     */
    paystackTransferFeeMomo?: number | null;
    /**
     * Platform service charge (2%)
     */
    platformCharge?: number | null;
    /**
     * Total amount paid by contributor (including all fees)
     */
    amountPaidByContributor?: number | null;
    /**
     * Paystack processing fee (1.95%)
     */
    paystackCharge?: number | null;
  };
  paymentStatus?: ('pending' | 'completed' | 'failed' | 'transferred') | null;
  /**
   * Select the linked deposit for this contribution
   */
  linkedContribution?: (string | null) | Contribution;
  /**
   * Select the linked transfer for this contribution
   */
  linkedTransfer?: (string | null) | Contribution;
  /**
   * Check if this contribution has been transferred
   */
  isTransferred?: boolean | null;
  type: 'transfer' | 'contribution';
  /**
   * Transaction reference for tracking payments
   */
  transactionReference?: string | null;
  /**
   * User who collected the contribution
   */
  collector: string | User;
  /**
   * Check if this contribution was made via a payment link
   */
  viaPaymentLink?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jars".
 */
export interface Jar {
  id: string;
  /**
   * Name of the jar
   */
  name: string;
  /**
   * Description of the jar
   */
  description?: string | null;
  jarGroup?: string | null;
  /**
   * Upload an image for the jar
   */
  image?: (string | null) | Media;
  /**
   * Whether the jar is currently active
   */
  isActive?: boolean | null;
  /**
   * Whether the contribution amount is fixed
   */
  isFixedContribution?: boolean | null;
  /**
   * Accepted contribution amount for fixed contributions
   */
  acceptedContributionAmount?: number | null;
  /**
   * Target amount for the jar
   */
  goalAmount?: number | null;
  /**
   * Deadline for contributions to this jar
   */
  deadline?: string | null;
  /**
   * Currency code (GHS or ngn)
   */
  currency: string;
  /**
   * User who created the jar
   */
  creator: string | User;
  invitedCollectors?:
    | {
        /**
         * Users who can contribute to this jar (excluding the creator)
         */
        collector?: (string | null) | User;
        /**
         * Phone number of the invited collector (auto-populated from selected collector)
         */
        phoneNumber?: string | null;
        /**
         * Name of the invited collector (auto-populated from selected collector)
         */
        name?: string | null;
        status: 'accepted' | 'pending';
        id?: string | null;
      }[]
    | null;
  paymentPage?: {
    link?: string | null;
    showGoal?: boolean | null;
    showRecentContributions?: boolean | null;
  };
  /**
   * Who pays the platform fees for this jar
   */
  whoPaysPlatformFees?: ('creator' | 'contributors') | null;
  thankYouMessage?: string | null;
  /**
   * Current status of the jar
   */
  status: 'open' | 'broken' | 'sealed';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'contributions';
        value: string | Contribution;
      } | null)
    | ({
        relationTo: 'jars';
        value: string | Jar;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        title?: T;
        subTitle?: T;
        dateLabel?: T;
        date?: T;
        buttonTitle?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    anchor?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
        avatarsSection?:
          | T
          | {
              enabled?: T;
              title?: T;
              subtitle?: T;
              avatars?:
                | T
                | {
                    image?: T;
                    name?: T;
                    id?: T;
                  };
              appStoreLinks?:
                | T
                | {
                    title?: T;
                    appleAppStoreUrl?: T;
                    googlePlayStoreUrl?: T;
                  };
            };
        appStoreLinks?:
          | T
          | {
              title?: T;
              appleAppStoreUrl?: T;
              googlePlayStoreUrl?: T;
            };
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        whyChooseUs?: T | WhyChooseUsBlockSelect<T>;
        features?: T | FeaturesBlockSelect<T>;
        useCasesSummary?: T | UseCasesSummaryBlockSelect<T>;
        pricing?: T | PricingBlockSelect<T>;
        metrics?: T | MetricsBlockSelect<T>;
        missionVisionValues?: T | MissionVisionValuesBlockSelect<T>;
        testimonials?: T | TestimonialsBlockSelect<T>;
        faq?: T | FAQBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  anchor?: T;
  title?: T;
  description?: T;
  image?: T;
  appStoreButton?:
    | T
    | {
        show?: T;
        url?: T;
      };
  googlePlayButton?:
    | T
    | {
        show?: T;
        url?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  anchor?: T;
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              anchor?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  anchor?: T;
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  anchor?: T;
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  anchor?: T;
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WhyChooseUsBlock_select".
 */
export interface WhyChooseUsBlockSelect<T extends boolean = true> {
  anchor?: T;
  title?: T;
  subtitle?: T;
  features?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlock_select".
 */
export interface FeaturesBlockSelect<T extends boolean = true> {
  anchor?: T;
  title?: T;
  features?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        showLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              anchor?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "UseCasesSummaryBlock_select".
 */
export interface UseCasesSummaryBlockSelect<T extends boolean = true> {
  anchor?: T;
  title?: T;
  subtitle?: T;
  useCases?:
    | T
    | {
        image?: T;
        useCase?: T;
        title?: T;
        description?: T;
        imagePosition?: T;
        showLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              anchor?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PricingBlock_select".
 */
export interface PricingBlockSelect<T extends boolean = true> {
  anchor?: T;
  title?: T;
  description?: T;
  calculatorSection?:
    | T
    | {
        requestLabel?: T;
        feePayerLabel?: T;
        feePayerOptions?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
        chargesBreakdownLabel?: T;
        telcoFeeLabel?: T;
        platformFeeLabel?: T;
        contributorPaysLabel?: T;
        youReceiveLabel?: T;
      };
  feeStructure?:
    | T
    | {
        telcoTransactionFee?: T;
        platformFeeMax?: T;
      };
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  ctaButton?:
    | T
    | {
        text?: T;
      };
  poweredBy?:
    | T
    | {
        text?: T;
        logo?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MetricsBlock_select".
 */
export interface MetricsBlockSelect<T extends boolean = true> {
  anchor?: T;
  title?: T;
  subtitle?: T;
  statistics?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MissionVisionValuesBlock_select".
 */
export interface MissionVisionValuesBlockSelect<T extends boolean = true> {
  anchor?: T;
  title?: T;
  subtitle?: T;
  items?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  anchor?: T;
  heading?: T;
  subheading?: T;
  testimonials?:
    | T
    | {
        quote?: T;
        authorName?: T;
        authorTitle?: T;
        authorImage?: T;
        company?: T;
        id?: T;
      };
  showNavigation?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock_select".
 */
export interface FAQBlockSelect<T extends boolean = true> {
  anchor?: T;
  heading?: T;
  subheading?: T;
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  photo?: T;
  fullName?: T;
  countryCode?: T;
  phoneNumber?: T;
  country?: T;
  isKYCVerified?: T;
  frontFile?: T;
  backFile?: T;
  photoFile?: T;
  documentType?: T;
  kycSessionId?: T;
  kycStatus?: T;
  role?: T;
  bank?: T;
  accountNumber?: T;
  accountHolder?: T;
  paystackSubAccountCode?: T;
  appSettings?:
    | T
    | {
        language?: T;
        theme?: T;
        biometricAuthEnabled?: T;
        notificationsSettings?:
          | T
          | {
              pushNotificationsEnabled?: T;
              emailNotificationsEnabled?: T;
              smsNotificationsEnabled?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contributions_select".
 */
export interface ContributionsSelect<T extends boolean = true> {
  jar?: T;
  contributor?: T;
  contributorPhoneNumber?: T;
  paymentMethod?: T;
  mobileMoneyProvider?: T;
  accountNumber?: T;
  amountContributed?: T;
  charges?: T;
  chargesBreakdown?:
    | T
    | {
        paystackTransferFeeMomo?: T;
        platformCharge?: T;
        amountPaidByContributor?: T;
        paystackCharge?: T;
      };
  paymentStatus?: T;
  linkedContribution?: T;
  linkedTransfer?: T;
  isTransferred?: T;
  type?: T;
  transactionReference?: T;
  collector?: T;
  viaPaymentLink?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jars_select".
 */
export interface JarsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  jarGroup?: T;
  image?: T;
  isActive?: T;
  isFixedContribution?: T;
  acceptedContributionAmount?: T;
  goalAmount?: T;
  deadline?: T;
  currency?: T;
  creator?: T;
  invitedCollectors?:
    | T
    | {
        collector?: T;
        phoneNumber?: T;
        name?: T;
        status?: T;
        id?: T;
      };
  paymentPage?:
    | T
    | {
        link?: T;
        showGoal?: T;
        showRecentContributions?: T;
      };
  whoPaysPlatformFees?: T;
  thankYouMessage?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          /**
           * Optional anchor/hash fragment (e.g., "faq", "features") - will be appended as #anchor to the URL
           */
          anchor?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          /**
           * Optional anchor/hash fragment (e.g., "faq", "features") - will be appended as #anchor to the URL
           */
          anchor?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Add social media links that will appear in the footer
   */
  socialLinks?:
    | {
        platform: 'twitter' | 'facebook' | 'linkedin' | 'instagram' | 'github' | 'youtube' | 'tiktok';
        url: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Bottom menu items that appear in the footer (e.g., Terms, Privacy, Cookies)
   */
  bottomMenuItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          /**
           * Optional anchor/hash fragment (e.g., "faq", "features") - will be appended as #anchor to the URL
           */
          anchor?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              anchor?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              anchor?: T;
              label?: T;
            };
        id?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        id?: T;
      };
  bottomMenuItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              anchor?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}