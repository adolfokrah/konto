name: Trigger Codemagic Build

on:
  workflow_run:
    workflows: ["Mobile Integration Tests"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch: # Keep manual triggering option
    inputs:
      environment:
        description: 'Build environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      custom_message:
        description: 'Custom message for the build'
        required: false
        default: 'Manual build triggered'

jobs:
  trigger-build:
    runs-on: ubuntu-latest
    # Only run if the mobile integration tests passed
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Trigger Codemagic Build
        id: trigger-build
        run: |
          echo "Triggering Codemagic build..."
          
          response=$(curl -s -X POST \
          -H "Content-Type: application/json" \
          -H "x-auth-token: ${{ secrets.CODEMAGIC_API_TOKEN }}" \
          -d '{
            "appId": "${{ secrets.CODEMAGIC_APP_ID }}",
            "workflowId": "staging-workflow",
            "branch": "main",
            "environment": {
              "variables": {
                "CUSTOM_MESSAGE": "${{ github.event.inputs.custom_message || 'Build triggered after successful integration tests' }}",
                "BUILD_ENV": "${{ github.event.inputs.environment || 'staging' }}"
              }
            }
          }' \
          https://api.codemagic.io/builds)
          
          echo "Response: $response"
          
          # Extract build ID from response
          build_id=$(echo $response | grep -o '"buildId":"[^"]*"' | cut -d'"' -f4)
          
          if [ -z "$build_id" ]; then
            echo "Failed to get build ID from response"
            exit 1
          fi
          
          echo "Build triggered successfully! Build ID: $build_id"
          echo "build_id=$build_id" >> $GITHUB_OUTPUT

      - name: Wait for Codemagic Build to Complete
        run: |
          build_id="${{ steps.trigger-build.outputs.build_id }}"
          echo "Monitoring build: $build_id"
          
          max_wait_time=3600  # 1 hour max wait time
          check_interval=60   # Check every 60 seconds
          elapsed_time=0
          
          while [ $elapsed_time -lt $max_wait_time ]; do
            echo "Checking build status... (${elapsed_time}s elapsed)"
            
            status_response=$(curl -s \
              -H "Content-Type: application/json" \
              -H "x-auth-token: ${{ secrets.CODEMAGIC_API_TOKEN }}" \
              "https://api.codemagic.io/builds/$build_id")
            
            echo "Status response: $status_response"
            
            # Extract status from response
            status=$(echo $status_response | grep -o '"status":"[^"]*"' | cut -d'"' -f4)
            
            echo "Current build status: $status"
            
            case $status in
              "finished")
                echo "‚úÖ Build completed successfully!"
                exit 0
                ;;
              "failed"|"canceled"|"timeout")
                echo "‚ùå Build failed with status: $status"
                exit 1
                ;;
              "building"|"queued"|"preparing"|"testing"|"publishing"|"fetching"|"finishing")
                echo "üîÑ Build in progress: $status"
                ;;
              *)
                echo "‚ö†Ô∏è Unknown status: $status"
                ;;
            esac
            
            sleep $check_interval
            elapsed_time=$((elapsed_time + check_interval))
          done
          
          echo "‚ùå Build timed out after ${max_wait_time} seconds"
          exit 1
